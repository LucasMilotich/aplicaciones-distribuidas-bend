{"version":3,"sources":["../../dist/index.js"],"names":["_mongo","_interopRequireDefault","require","_moviesController","_userController","_commentsController","obj","__esModule","express","app","router","Router","createError","path","use","json","urlencoded","extended","set","join","__dirname","moviesController","get","getMovies","searchMovies","userController","post","login","register","changePassword","commentsController","getCommentsByMovie","put","saveComment","req","res","send","err","next","console","log","status","message","url","code","error_code","listen"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _mongo = _interopRequireDefault(require(\"./db/mongo\"));\n\nvar _moviesController = _interopRequireDefault(require(\"./controllers/moviesController\"));\n\nvar _userController = _interopRequireDefault(require(\"./controllers/userController\"));\n\nvar _commentsController = _interopRequireDefault(require(\"./controllers/commentsController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar express = require('express');\n\nvar app = express();\nvar router = express.Router();\n\nvar createError = require('http-errors');\n\nvar path = require('path');\n\n// express cfg\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug'); //routes\n// movies\n\nvar moviesController = new _moviesController[\"default\"]();\nrouter.get('/movies', moviesController.getMovies);\nrouter.get('/movies/search', moviesController.searchMovies); //users\n\nvar userController = new _userController[\"default\"]();\nrouter.post('/user/login', userController.login);\nrouter.post('/user/register', userController.register);\nrouter.post('/user/change_password', userController.changePassword); //comments\n\nvar commentsController = new _commentsController[\"default\"]();\nrouter.get('/movies/:movieId/comments', commentsController.getCommentsByMovie);\nrouter.put('/movies/:movieId/comment', commentsController.saveComment);\nrouter.get('/health-check', function (req, res) {\n  res.send('OK');\n});\nrouter.get('/', function (req, res) {\n  res.send('OK');\n});\napp.use('/', router); // error handler\n\napp.use(function (err, req, res, next) {\n  console.log(err); // render the error page\n\n  res.status(err.status).json(err);\n});\napp.use(function (req, res, next) {\n  return res.status(404).send({\n    message: 'Route ' + req.url + ' Not found.',\n    code: 404,\n    error_code: \"not_found\"\n  });\n});\napp.listen(8080, function () {\n  console.log('Example app listening on port 8080!');\n});"],"file":"index.js"}