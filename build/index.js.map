{"version":3,"sources":["../src/index.js"],"names":["express","require","app","router","Router","createError","path","use","json","urlencoded","extended","set","join","__dirname","moviesController","MoviesController","get","getMovies","searchMovies","userController","UserController","post","login","register","changePassword","commentsController","CommentsController","getCommentsByMovie","put","saveComment","req","res","send","err","next","console","log","status","message","url","code","error_code","listen","process","env","PORT"],"mappings":";;AAQA;;AACA;;AACA;;AACA;;;;AAXA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;AACA,IAAMG,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf;;AACA,IAAMC,WAAW,GAAGJ,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AAWA;AAEAC,GAAG,CAACK,GAAJ,CAAQP,OAAO,CAACQ,IAAR,EAAR;AACAN,GAAG,CAACK,GAAJ,CAAQP,OAAO,CAACS,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEAR,GAAG,CAACS,GAAJ,CAAQ,OAAR,EAAiBL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAX,GAAG,CAACS,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CAGA;AAEA;;AACA,IAAMG,gBAAgB,GAAG,IAAIC,4BAAJ,EAAzB;AACAZ,MAAM,CAACa,GAAP,CAAW,SAAX,EAAsBF,gBAAgB,CAACG,SAAvC;AACAd,MAAM,CAACa,GAAP,CAAW,gBAAX,EAA6BF,gBAAgB,CAACI,YAA9C,E,CAEA;;AACA,IAAMC,cAAc,GAAG,IAAIC,0BAAJ,EAAvB;AACAjB,MAAM,CAACkB,IAAP,CAAY,aAAZ,EAA2BF,cAAc,CAACG,KAA1C;AACAnB,MAAM,CAACkB,IAAP,CAAY,gBAAZ,EAA8BF,cAAc,CAACI,QAA7C;AACApB,MAAM,CAACkB,IAAP,CAAY,uBAAZ,EAAqCF,cAAc,CAACK,cAApD,E,CAEA;;AAEA,IAAMC,kBAAkB,GAAG,IAAIC,8BAAJ,EAA3B;AACAvB,MAAM,CAACa,GAAP,CAAW,2BAAX,EAAwCS,kBAAkB,CAACE,kBAA3D;AACAxB,MAAM,CAACyB,GAAP,CAAW,0BAAX,EAAuCH,kBAAkB,CAACI,WAA1D;AASA1B,MAAM,CAACa,GAAP,CAAW,eAAX,EAA4B,UAACc,GAAD,EAAMC,GAAN,EAAc;AACxCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,IAAT;AACD,CAFD;AAKA7B,MAAM,CAACa,GAAP,CAAW,GAAX,EAAgB,UAACc,GAAD,EAAMC,GAAN,EAAc;AAC5BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,IAAT;AACD,CAFD;AAKA9B,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAaJ,MAAb,E,CAMA;;AACAD,GAAG,CAACK,GAAJ,CAAQ,UAAS0B,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBG,IAAxB,EAA8B;AAEpCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAFoC,CAGpC;;AACAF,EAAAA,GAAG,CAACM,MAAJ,CAAWJ,GAAG,CAACI,MAAf,EAAuB7B,IAAvB,CAA4ByB,GAA5B;AAED,CAND;AAQA/B,GAAG,CAACK,GAAJ,CAAQ,UAASuB,GAAT,EAAcC,GAAd,EAAmBG,IAAnB,EAAyB;AAC/B,SAAOH,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAAEM,IAAAA,OAAO,EAAE,WAASR,GAAG,CAACS,GAAb,GAAiB,aAA5B;AAA2CC,IAAAA,IAAI,EAAE,GAAjD;AAAsDC,IAAAA,UAAU,EAAE;AAAlE,GAArB,CAAP;AACD,CAFD;AAIAvC,GAAG,CAACwC,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,YAAM;AACzCV,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,CAFD","sourcesContent":["const express = require('express')\nconst app = express();\nconst router = express.Router();\nconst createError = require('http-errors');\nconst path = require('path');\n\n\n\nimport Mongo from './db/mongo'\nimport MoviesController from './controllers/moviesController'\nimport UserController from './controllers/userController'\nimport CommentsController from './controllers/commentsController'\n\n\n\n// express cfg\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\n\n//routes\n\n// movies\nconst moviesController = new MoviesController()\nrouter.get('/movies', moviesController.getMovies)\nrouter.get('/movies/search', moviesController.searchMovies)\n\n//users\nconst userController = new UserController()\nrouter.post('/user/login', userController.login)\nrouter.post('/user/register', userController.register)\nrouter.post('/user/change_password', userController.changePassword)\n\n//comments\n\nconst commentsController = new CommentsController()\nrouter.get('/movies/:movieId/comments', commentsController.getCommentsByMovie)\nrouter.put('/movies/:movieId/comment', commentsController.saveComment)\n\n\n\n\n\n\n\n\nrouter.get('/health-check', (req, res) => {\n  res.send('OK')\n});\n\n\nrouter.get('/', (req, res) => {\n  res.send('OK')\n});\n\n\napp.use('/', router);\n\n\n\n\n\n// error handler\napp.use(function(err, req, res, next) {\n \n  console.log(err)\n  // render the error page\n  res.status(err.status).json(err)\n\n});\n\napp.use(function(req, res, next) {\n  return res.status(404).send({ message: 'Route '+req.url+' Not found.', code: 404, error_code: \"not_found\" });\n});\n\napp.listen(process.env.PORT || 8080, () => {\n  console.log('Example app listening on port 8080!')\n});\n"],"file":"index.js"}