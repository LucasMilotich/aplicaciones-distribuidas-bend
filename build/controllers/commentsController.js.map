{"version":3,"sources":["../../src/controllers/commentsController.js"],"names":["errorBuilder","require","CommentsController","req","res","next","movieId","parseInt","params","mongo","Mongo","getAll","movie_id","then","elem","console","log","send","comments","username","body","comment","save"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;IAGqBC,kB;;;;;;;;;uCAEEC,G,EAAKC,G,EAAIC,I,EAAK;AAC7B,UAAIC,OAAO,GAAGC,QAAQ,CAACJ,GAAG,CAACK,MAAJ,CAAWF,OAAZ,EAAoB,EAApB,CAAtB;AAEA,UAAIG,KAAK,GAAG,IAAIC,iBAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,MAAN,CAAa,UAAb,EAAwB;AAACC,QAAAA,QAAQ,EAAGN;AAAZ,OAAxB,EAA8CO,IAA9C,CAAmD,UAAAC,IAAI,EAAI;AACvDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdV,UAAAA,GAAG,CAACa,IAAJ,CAASjB,YAAY,CAAC,oBAAD,EAAuB,GAAvB,EAA4B,WAA5B,CAArB;AACH,SAFD,MAEO;AACHI,UAAAA,GAAG,CAACa,IAAJ,CAAS;AAACC,YAAAA,QAAQ,EAACJ;AAAV,WAAT;AACH;AAER,OARG;AASP;;;gCAEeX,G,EAAKC,G,EAAIC,I,EAAK;AAEtB,UAAIc,QAAQ,GAAGhB,GAAG,CAACiB,IAAJ,CAASD,QAAxB;AACA,UAAIE,OAAO,GAAGlB,GAAG,CAACiB,IAAJ,CAASC,OAAvB;AACA,UAAIf,OAAO,GAAGH,GAAG,CAACiB,IAAJ,CAASR,QAAvB;AAEA,UAAIH,KAAK,GAAG,IAAIC,iBAAJ,EAAZ;AAEAD,MAAAA,KAAK,CAACa,IAAN,CAAW,UAAX,EAAuB;AAAEH,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,QAAAA,OAAO,EAAEA,OAA/B;AAAwCT,QAAAA,QAAQ,EAAEN;AAAlD,OAAvB,EAAoFO,IAApF,CAAyF,UAAAC,IAAI,EAAI;AAC7FC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdV,UAAAA,GAAG,CAACa,IAAJ,CAASjB,YAAY,CAAC,kBAAD,EAAqB,GAArB,EAA0B,OAA1B,CAArB;AACH,SAFD,MAEO;AACHI,UAAAA,GAAG,CAACa,IAAJ,CAASH,IAAT;AACH;AAEJ,OARD;AASH","sourcesContent":["import Mongo from '../db/mongo';\n\nconst errorBuilder = require('../domain/error')\n\n\nexport default class CommentsController {\n    \n    getCommentsByMovie(req, res,next){\n        let movieId = parseInt(req.params.movieId,10)\n\n        let mongo = new Mongo()\n        mongo.getAll(\"comments\",{movie_id : movieId}).then(elem => {\n            console.log(elem)\n            if (elem == null) {\n                res.send(errorBuilder(\"comments not found\", 400, \"not_found\"))\n            } else {\n                res.send({comments:elem})\n            }\n\n    })\n}\n\n    saveComment(req, res,next){\n\n        let username = req.body.username\n        let comment = req.body.comment\n        let movieId = req.body.movie_id\n\n        let mongo = new Mongo()\n        \n        mongo.save(\"comments\", { username: username, comment: comment, movie_id: movieId }).then(elem => {\n            console.log(elem)\n            if (elem == null) {\n                res.send(errorBuilder(\"error in comment\", 500, \"error\"))\n            } else {\n                res.send(elem)\n            }\n\n        })\n    }\n\n}\n\n"],"file":"commentsController.js"}